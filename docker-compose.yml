version: '3'

services:

  # listener - watches rabbitmq for messages
  listener:
    build:
      context: .
      dockerfile: ./listener.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 2

  # broker - main entry point; we call this from the front end
  broker:
    build:
      context: .
      dockerfile: ./broker.dockerfile
    ports:
      - "8080:80"

  # rabbitmq: the rabbitmq server
  rabbitmq:
    image: 'rabbitmq:3-management'
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always

  # a service to store logs
  log-service:
    build:
      context: .
      dockerfile: ./logservice.dockerfile
    restart: always
    volumes:
      - ./logs/:/app/logs

  # etcd: start etcd server
  etcd:
    image: docker.io/bitnami/etcd:3
    ports:
      - "2379:2379"
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
    volumes:
      - ./db-data/etcd/:/bitnami/etcd

  #  mailhog: a fake smtp server with a web interface
  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"
    restart: always

